{
	"macro": {
		"prefix": "macro",
		"body": [
			"{",
                "\t\t'name' 'name'",
                "\t\t'desc' ",
                "\t\t<'",
                "description",
                "\t\t'>",
                "\t\t'sig' [ [ [ 'input:TYPE' ] [ 'output:TYPE' ] ] ] // Signature",
                "\t\t'params' {",
                "\t\t\t// Signature params description",
                "\t\t\t'input' 'TODO'",
                "\t\t\t'output' 'TODO'",
                "\t\t}",
                "\t\t'examples' [",
                "\t\t\t<'",
                "WarpScript usage example",
                "\t\t\t'>",
                "\t\t]",
                "} 'info' STORE",
                "<%",
                "\t!$info INFO",
                "\tSAVE 'context' STORE",
                "\t\t// Code of the actual macro",
                "\t$context RESTORE",
                "%>",
                "'macro' STORE",
                "// Unit tests",
                "$macro"
		],
		"description": "Macro"
    },
    "fetch": {
        "prefix": "fetch",
        "body": [
            "[ 'TOKEN' 'className'  { 'label0' '=value0'  'label1' '~val.' }  start timespan ] FETCH"
        ]
    },
    "bucketize": {
        "prefix": "bucketize",
        "body": [
            "[ ${1:gts} ${2|MACROBUCKETIZER,bucketizer.and,bucketizer.count,bucketizer.count.exclude-nulls,bucketizer.count.include-nulls,bucketizer.count.nonnull,bucketizer.first,bucketizer.join,bucketizer.join.forbid-nulls,bucketizer.last,bucketizer.max,bucketizer.max.forbid-nulls,bucketizer.mean,bucketizer.mean.circular,bucketizer.mean.circular.exclude-nulls,bucketizer.mean.exclude-nulls,bucketizer.median,bucketizer.min,bucketizer.min.forbid-nulls,bucketizer.or,bucketizer.sum,bucketizer.sum.forbid-nulls|} ${3:lastbucket} ${4:bucketspan} ${5:bucketcount} ] BUCKETIZE"
        ]
    },
    "filter": {
        "prefix": "filter",
        "body": [
            "[ ${1:gts} [${2:labels}] ${3|MACROFILTER,filter.byattr,filter.byclass,filter.bylabels,filter.bylabelsattr,filter.bymetadata,filter.last.eq,filter.last.ge,filter.last.gt,filter.last.le,filter.last.lt,filter.last.ne,filter.latencies|} ] FILTER"
        ]
    },
    "map": {
        "prefix": "map",
        "body": [
            "[ ${1:gts} ${2|MACROMAPPER,mapper.abs,mapper.add,mapper.and,mapper.ceil,mapper.count,mapper.count.exclude-nulls,mapper.count.include-nulls,mapper.count.nonnull,mapper.day,mapper.delta,mapper.dotproduct,mapper.dotproduct.positive,mapper.dotproduct.sigmoid,mapper.dotproduct.tanh,mapper.eq,mapper.exp,mapper.finite,mapper.first,mapper.floor,mapper.ge,mapper.geo.approximate,mapper.geo.clear,mapper.geo.outside,mapper.geo.within,mapper.gt,mapper.hdist,mapper.highest,mapper.hour,mapper.hspeed,mapper.join,mapper.join.forbid-nulls,mapper.kernel.cosine,mapper.kernel.epanechnikov,mapper.kernel.gaussian,mapper.kernel.logistic,mapper.kernel.quartic,mapper.kernel.silverman,mapper.kernel.triangular,mapper.kernel.tricube,mapper.kernel.triweight,mapper.kernel.uniform,mapper.last,mapper.le,mapper.log,mapper.lowest,mapper.lt,mapper.mad,mapper.max,mapper.max.forbid-nulls,mapper.max.x,mapper.mean,mapper.mean.circular,mapper.mean.circular.exclude-nulls,mapper.mean.exclude-nulls,mapper.median,mapper.min,mapper.min.forbid-nulls,mapper.min.x,mapper.minute,mapper.mod,mapper.month,mapper.mul,mapper.ne,mapper.npdf,mapper.or,mapper.parsedouble,mapper.percentile,mapper.pow,mapper.product,mapper.rate,mapper.replace,mapper.round,mapper.sd,mapper.sd.forbid-nulls,mapper.second,mapper.sigmoid,mapper.sqrt,mapper.sum,mapper.sum.forbid-nulls,mapper.tanh,mapper.tick,mapper.toboolean,mapper.todouble,mapper.tolong,mapper.tostring,mapper.truecourse,mapper.var,mapper.var.forbid-nulls,mapper.vdist,mapper.vspeed,mapper.weekday,mapper.year,max.tick.sliding.window,max.time.sliding.window|} ${3:pre} ${4:post} ${5:occurrences} ] MAP"
        ]
    },
    "reduce": {
        "prefix": "reduce",
        "body": [
            "[ ${1:gts} [${2:labels}] ${3|MACROREDUCER,reducer.and,reducer.and.exclude-nulls,reducer.argmax,reducer.argmin,reducer.count,reducer.count.exclude-nulls,reducer.count.include-nulls,reducer.count.nonnull,reducer.join,reducer.join.forbid-nulls,reducer.join.nonnull,reducer.join.urlencoded,reducer.max,reducer.max.forbid-nulls,reducer.max.nonnull,reducer.mean,reducer.mean.circular,reducer.mean.circular.exclude-nulls,reducer.mean.exclude-nulls,reducer.median,reducer.min,reducer.min.forbid-nulls,reducer.min.nonnull,reducer.or,reducer.or.exclude-nulls,reducer.sd,reducer.sd.forbid-nulls,reducer.shannonentropy.0,reducer.shannonentropy.1,reducer.sum,reducer.sum.forbid-nulls,reducer.sum.nonnull,reducer.var,reducer.var.forbid-nulls|} ] REDUCE"
        ]
    },
    "apply": {
        "prefix": "apply",
        "body": [
            "[ ${1:gts} [${2:labels}] ${3|OP,op.add,op.add.ignore-nulls,op.and,op.and.ignore-nulls,op.div,op.eq,op.ge,op.gt,op.le,op.lt,op.mask,op.mul,op.mul.ignore-nulls,op.ne,op.negmask,op.or,op.or.ignore-nulls,op.sub|} ] APPLY"
        ],
        "description": "Apply framework"

    },
    "ift": {
		"prefix": "ift",
		"body": [
			"<% ${1:condition} %>",
			"<% ${2:action_if_true} %>",
            "IFT"
        ],
		"description": "If statement"
    },
    "ifte": {
        "prefix": "ifte",
		"body": [
            "<% ${1:condition} %>",
            "<% ${2:action_if_true} %>",
            "<% ${3:action_if_false} %>",
            "IFTE"
        ],
		"description": "If then else statement"
    },
    "switch": {
		"prefix": "switch",
		"body": [
			"<% ${1:case_1} %> <% ${2:action_1} %>",
			"<% ${3:case_2} %> <% ${4:action_2} %>",
			"<% ${5:case_3} %> <% ${6:action_3} %>",
            "<% ${7:default} %>",
            "${8:number_of_branch}",
            "SWITCH"
        ],
		"description": "Switch statement"
    },
    "try": {
		"prefix": "try",
		"body": [
			"<% ${1:try} %>",
			"<% ${2:catch} %>",
            "<% ${3:finally} %>",
            "TRY"
        ],
		"description": "Try/Catch statement"
    },
    "while": {
		"prefix": "while",
		"body": [
            "<% ${1:condition} %>",
            "<% ${2:action_while_true} %>",
            "WHILE"
        ],
		"description": "While loop"
    },
    "until": {
		"prefix": "until",
		"body": [
            "<% ${1:action_until_true} %>",
			"<% ${2:condition} %>",
            "UNTIL"
        ],
		"description": "Until loop"
    },
    "for": {
		"prefix": "for",
		"body": [
            "<% ${1:inititial_value} %>",
            "<% ${2:final_value} %>",
			"<% ${3:action} %>",
            "FOR"
        ],
		"description": "For loop"
    },
    "foreach": {
		"prefix": "foreach",
		"body": [
            "${1:object}",
			"<% ${2:action} %>",
            "FOREACH"
        ],
		"description": "Foreach loop"
    },
    "forstep": {
		"prefix": "forstep",
		"body": [
            "<% ${1:inititial_value} %>",
            "<% ${2:final_value} %>",
			"<% ${3:step} %>",
			"<% ${4:action} %>",
            "FORSTEP"
        ],
		"description": "Forstep loop"
    }
}
