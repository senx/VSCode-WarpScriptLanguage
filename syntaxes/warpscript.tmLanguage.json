{
  "$schema":
    "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "WarpScript",
  "patterns": [
    { "include": "#comments" },
    { "include": "#variables" },
    { "include": "#macros" },
    { "include": "#numbers" },
    { "include": "#string1" },
    { "include": "#string2" },
    { "include": "#string3" },
    { "include": "#types" },
    { "include": "#operator" },
    { "include": "#gts" },
    { "include": "#lists" },
    { "include": "#outlier" },
    { "include": "#encoder" },
    { "include": "#control" },
    { "include": "#platform" },
    { "include": "#date" },
    { "include": "#maps" },
    { "include": "#math" },
    { "include": "#operators" },
    { "include": "#binary" },
    { "include": "#misc" },
    { "include": "#strings" },
    { "include": "#crypto" },
    { "include": "#stack" },
    { "include": "#sets" },
    { "include": "#conversion" },
    { "include": "#logic" },
    { "include": "#debug" },
    { "include": "#time" },
    { "include": "#trigonometry" },
    { "include": "#extensions" },
    { "include": "#flow" },
    { "include": "#reducer" },
    { "include": "#mapper" },
    { "include": "#bucketize" },
    { "include": "#statistics" },
    { "include": "#help" },
    { "include": "#quaternions" },
    { "include": "#framework" },
    { "include": "#counters" },
    { "include": "#constants" },
    { "include": "#processing" },
    { "include": "#ProcessingNOTREVIEWED" },
    { "include": "#pig" },
    { "include": "#filter" },
    { "include": "#apply" },
    { "include": "#geo" },
    { "include": "#bitset" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "captures": {
            "0": { "name": "punctuation.definition.comment.java" }
          },
          "match": "/\\*\\*/",
          "name": "comment.block.empty.java"
        },
        { "include": "text.html.javadoc" },
        { "include": "#comments-inline" }
      ]
    },
    "comments-inline": {
      "patterns": [
        {
          "begin": "/\\*",
          "captures": {
            "0": { "name": "punctuation.definition.comment.java" }
          },
          "end": "(\\s)*\\*/",
          "name": "comment.block.java"
        },
        {
          "begin": "(^[\\s\\t]+)?(?=//)",
          "beginCaptures": {
            "1": { "name": "punctuation.whitespace.comment.leading.java" }
          },
          "end": "(?!\\G)",
          "patterns": [
            {
              "begin": "(\\s)*//",
              "beginCaptures": {
                "0": { "name": "punctuation.definition.comment.java" }
              },
              "end": "\\n",
              "name": "comment.line.double-slash.java"
            }
          ]
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "\\$([A-Za-z0-9._]+)",
          "name": "keyword.control.export.js"
        }
      ]
    },
    "macros": {
      "patterns": [
        {
          "match": "\\@([A-Za-z0-9._\\/]+)",
          "name": "keyword.control.export.js"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "(?<!\\S)(-)?[0-9.]+\\b",
          "name": "constant.numeric.warpscript"
        },
        {
          "match": "(?<!\\S)0x[0-9ABCDEFabcdef]+\\b",
          "name": "constant.numeric.warpscript"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "match":
            "(<LIST(<.+>)?>|<STRING>|<GTS>|<BUCKETIZER>|<MAPPER>|<FILTER>|<REDUCER>|<LONG>|<DOUBLE>|<ANY>|<NUMBER>|<MAP>|<VECTOR>|<BYTES>|<BITSET>)(?!\\S)",
          "name": "entity.name.type"
        }
      ]
    },
    "string1": {
      "name": "string.quoted.double.warpscript",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        { "name": "constant.character.escape.warpscript", "match": "\\\\." }
      ]
    },
    "string2": {
      "name": "string.quoted.double.warpscript",
      "begin": "'",
      "end": "'",
      "patterns": [
        { "name": "constant.character.escape.warpscript", "match": "\\\\." }
      ]
    },
    "string3": {
      "name": "string.quoted.double.warpscript",
      "begin": "^\\s*<'",
      "end": "'>",
      "patterns": [
        { "name": "constant.character.escape.warpscript", "match": "\\\\." }
      ]
    },
    "operator": {
      "patterns": [
        {
          "match": "(?<!\\S)(!=|<|>|~=|<=|==|>=)(?!\\S)",
          "name": "keyword.operator.comparison.warpscript"
        },
        {
          "match": "(?<!\\S)(%|\\*|\\+|-|/|\\*\\*)(?!\\S)",
          "name": "keyword.operator.arithmetic.warpscript"
        },
        {
          "match": "(?<!\\S)(!|&&|AND|OR|NOT|\\|\\|)(?!\\S)",
          "name": "keyword.operator.logical.warpscript"
        },
        {
          "match": "(?<!\\S)(&|\\^|\\||>>>|~|<<|>>)(?!\\S)",
          "name": "keyword.operator.bitwise.warpscript"
        }
      ]
    },
    "frameworks": {
      "patterns": [
        {
          "match": "(?<!\\S)(MAP|FILTER|APPLY|REDUCE|BUCKETIZE)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "gts": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(ZSCORE\\|ZPATTERNS\\|ZPATTERNDETECTION\\|ZDTW\\|ZDISCORDS\\|WRAPRAWOPT\\|WRAPRAW\\|WRAPOPT\\|WRAP\\|VALUESPLIT\\|VALUESORT\\|VALUES\\|VALUEHISTOGRAM\\|VALUEDEDUP\\|UPDATE\\|UNWRAPSIZE\\|UNWRAPENCODER\\|UNWRAPEMPTY\\|UNWRAP\\|UNBUCKETIZE\\|TOSELECTOR\\|TOKENINFO\\|TOBITS\\|TLTTB\\|TIMESPLIT\\|TIMESHIFT\\|TIMESCALE\\|TIMEMODULO\\|TIMECLIP\\|TICKS\\|TICKLIST\\|TICKINDEX\\|THRESHOLDTEST\\|STRICTPARTITION\\|STLESDTEST\\|STL\\|STANDARDIZE\\|SORTBY\\|SORT\\|SMARTPARSE\\|SKEWNESS\\|SIZE\\|SINGLEEXPONENTIALSMOOTHING\\|SHRINK\\|SETVALUE\\|SETATTRIBUTES\\|RVALUESORT\\|RSORT\\|RLOWESS\\|RESETS\\|RENAME\\|RELABEL\\|RAWDTW\\|RANGECOMPACT\\|QUANTIZE\\|PROB\\|PATTERNS\\|PATTERNDETECTION\\|PARTITION\\|PARSESELECTOR\\|PARSE\\|PAPPLY\\|OPTIMIZE\\|OPTDTW\\|ONLYBUCKETS\\|NSUMSUMSQ\\|NORMALIZE\\|NONEMPTY\\|NEWGTS\\|NEWENCODER\\|NAME\\|MUSIGMA\\|MONOTONIC\\|MODE\\|METASORT\\|METASET\\|META\\|MERGE\\|MAXGTS\\|mapper\\.percentile\\|mapper\\.npdf\\|mapper\\.mod\\|mapper\\.median\\|mapper\\.mad\\|mapper\\.finite\\|MAKEGTS\\|LTTB\\|LR\\|LOWESS\\|LOCSTRINGS\\|LOCATIONS\\|LOCATIONOFFSET\\|LASTTICK\\|LASTSORT\\|LABELS\\|KURTOSIS\\|ISONORMALIZE\\|INTEGRATE\\|IFFT\\|IDWT\\|GRUBBSTEST\\|ENCODER->\\|GEO\\.WITHIN\\|GEO\\.INTERSECTS\\|FUSE\\|FIRSTTICK\\|FINDSTATS\\|FINDSETS\\|FIND\\|filter\\.latencies\\|FILLVALUE\\|FILLTICKS\\|FILLPREVIOUS\\|FILLNEXT\\|FFTWINDOW\\|FFTAP\\|FFT\\|FETCHSTRING\\|FETCHLONG\\|FETCHDOUBLE\\|FETCHBOOLEAN\\|FETCH\\|FDWT\\|ESDTEST\\|EMPTY\\|ELEVATIONS\\|DWTSPLIT\\|DTW\\|DOUBLEEXPONENTIALSMOOTHING\\|DISCORDS\\|DELETE\\|DEDUP\\|CPROB\\|CORRELATE\\|COPYGEO\\|COMPACT\\|COMMONTICKS\\|CLONEEMPTY\\|CLONE\\|CLIP\\|CHUNK\\|BUCKETSPAN\\|BUCKETIZE\\|BUCKETCOUNT\\|BBOX\\|ATTRIBUTES\\|ATTICK\\|ATINDEX\\|ATBUCKET\\|APPLY\\|->GTS\\|->DOUBLEBITS\\|ADDVALUE)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "lists": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(ZIP\\|UNPACK\\|UNLIST\\|UNIQUE\\|SUBLIST\\|SIZE\\|SET\\|REVERSE\\|REMOVE\\|PACK\\|\\]\\]\\|\\]\\|LSORT\\|\\[\\]\\|\\[\\[\\]\\]\\|\\[\\[\\|LMAP\\|\\[\\|LFLATMAP\\|VEC->\\|V->\\|IMMUTABLE\\|MAT->\\|LIST->\\|GET\\|FLATTEN\\|CONTAINS\\|CLONEREVERSE\\|APPEND\\|->VEC\\|->MAT\\|->LIST\\|\\+!)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "outlier": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(ZDISCORDS\\|STLESDTEST\\|HYBRIDTEST2\\|HYBRIDTEST\\|GRUBBSTEST\\|ESDTEST\\|DISCORDS)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "encoder": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(WRAPRAWOPT\\|WRAPRAW\\|WRAP\\|SETATTRIBUTES\\|RENAME\\|ENCODER->\\|CHUNKENCODER\\|->GTS\\|->ENCODER)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "control": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(WHILE\\|UNTIL\\|UDF\\|TRY\\|NRETURN\\|MSGFAIL\\|MAXLOOP\\|FORSTEP\\|FOREACH\\|FOR\\|FAIL\\|EVAL\\|DEFINEDMACRO\\|DEFINED\\|CUDF\\|CONTINUE\\|BREAK|true|false)(?!\\S)",
          "name": "keyword.control.warpscript"
        }
      ]
    },
    "platform": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(WEBCALL\\|UPDATE\\|RUN\\|OPS\\|NOOP\\|MAXSYMBOLS\\|MAXRECURSION\\|MAXPIXELS\\|MAXOPS\\|MAXLOOP\\|MAXGTS\\|MAXGEOCELLS\\|MAXDEPTH\\|MAXBUCKETS\\|MACROTTL\\|LIMIT\\|JSONSTRICT\\|JSONLOOSE\\|PICKLE->\\|INFOMODE\\|INFO\\|GETHOOK\\|EVERY\\|CALL\\|->PICKLE)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "date": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(w\\|us\\|TSELEMENTS\\|TOTIMESTAMP\\|STU\\|s\\|ps\\|ns\\|NOW\\|NOTBEFORE\\|NOTAFTER\\|MSTU\\|ms\\|m\\|TSELEMENTS->\\|ISO8601\\|HUMANDURATION\\|h\\|d\\|->TSELEMENTS\\|AGO\\|ADDYEARS\\|ADDMONTHS\\|ADDDAYS)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "maps": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(VALUELIST\\|UNMAP\\|\\}\\|\\{\\}\\|\\{\\|SUBMAP\\|SIZE\\|REMOVE\\|PUT\\|MSORT\\|MAPID\\|KEYLIST\\|IMMUTABLE\\|MAP->\\|GET\\|CONTAINSVALUE\\|CONTAINSKEY\\|APPEND\\|->MAP)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "math": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(~=\\|~\\|ULP\\|TRANSPOSE\\|TR\\|TOBITS\\|TANH\\|TAN\\|SRAND\\|SQRT\\|SINH\\|SIN\\|SIGNUM\\|ROUND\\|RINT\\|REVBITS\\|RANDPDF\\|RAND\\|pi\\|PROBABILITY\\|PRNG\\|e\\|NPDF\\|NONNULL\\|NBOUNDS\\|MINLONG\\|MIN\\|MAXLONG\\|MAX\\|LOG1P\\|LOG10\\|LOG\\|LBOUNDS\\|VEC->\\|PI\\|ISNULL\\|ISNaN\\|INV\\|MAT->\\|HYPOT\\|E\\|FLOOR\\|FDWT\\|>=\\|EXPM1\\|EXP\\|>\\|==\\|<=\\|<\\|DET\\|COSH\\|COS\\|COPYSIGN\\|CEIL\\|CBRT\\|ATAN2\\|ATAN\\|ASIN\\|/\\|->VEC\\|->MAT\\|->FLOATBITS\\|->DOUBLEBITS\\|ACOS\\|ABS\\|\\*\\*\\|\\+)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(~=\\|~\\|\\|\\|\\|\\|\\|SIGNUM\\|OR\\|op\\.sub\\|op\\.or\\|op\\.or\\.ignore-nulls\\|op\\.negmask\\|op\\.ne\\|op\\.mul\\|op\\.mul\\.ignore-nulls\\|op\\.mask\\|op\\.lt\\|op\\.le\\|op\\.gt\\|op\\.ge\\|op\\.eq\\|op\\.div\\|op\\.and\\|op\\.and\\.ignore-nulls\\|op\\.add\\|op\\.add\\.ignore-nulls\\|NEXTUP\\|NEXTAFTER\\|\\^\\|LOG10\\|LOG\\|IEEEREMAINDER\\|>>>\\|>>\\|>=\\|>\\|==\\|<=\\|<<\\|<\\|AND\\|/\\|-\\|\\*\\*\\|\\*\\|\\+!\\|\\+\\|&&\\|&\\|%\\|!=)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "binary": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(~\\|\\|\\|TOBIN\\|\\^\\|FLOATBITS->\\|DOUBLEBITS->\\|BIN->\\|FROMBITS\\|BYTESTOBITS\\|BITSTOBYTES\\|BITGET\\|BITCOUNT\\|BINTOHEX\\|&)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "misc": {
      "patterns": [
        {
          "match": "(?<!\\S)(UUID\\|RTFM)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(URLENCODE\\|URLDECODE\\|TRIM\\|TOUPPER\\|TOSTRING\\|TOLOWER\\|TOBIN\\|TEMPLATE\\|SUBSTRING\\|SPLIT\\|SMARTPARSE\\|SIZE\\|REVERSE\\|REPLACEALL\\|REPLACE\\|REOPTALT\\|PARSE\\|MATCHER\\|MATCH\\|JOIN\\|HASH\\|BIN->\\|B64URL->\\|B64->\\|BYTES->\\|CLONEREVERSE\\|BINTOHEX\\|B64TOHEX\\|->B64URL\\|->B64)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "crypto": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(UNSECURE\\|SHA256HMAC\\|SHA256\\|SHA1HMAC\\|SHA1\\|SECUREKEY\\|SECURE\\|RSAVERIFY\\|RSASIGN\\|RSAPUBLIC\\|RSAPRIVATE\\|RSAGEN\\|RSAENCRYPT\\|RSADECRYPT\\|MD5\\|EVALSECURE\\|AESWRAP\\|AESUNWRAP)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "stack": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(UNSECURE\\|TYPEOF\\|TIMINGS\\|SWAP\\|STORE\\|STOP\\|STACKTOLIST\\|STACKATTRIBUTE\\|SNAPSHOTTOMARK\\|SNAPSHOTN\\|SNAPSHOTCOPYTOMARK\\|SNAPSHOTCOPYN\\|SNAPSHOTCOPYALLTOMARK\\|SNAPSHOTCOPYALL\\|SNAPSHOTCOPY\\|SNAPSHOTALLTOMARK\\|SNAPSHOTALL\\|SNAPSHOT\\|SECUREKEY\\|SECURE\\|SECTION\\|SAVE\\|RUNNERNONCE\\|ROT\\|ROLLD\\|ROLL\\|REXECZ\\|REXEC\\|REV\\|RESTORE\\|RESET\\|REDEFS\\|PIGSCHEMA\\|PICK\\|NOTIMINGS\\|NDEBUGON\\|MAXDEPTH\\|MARK\\|LOAD\\|\\[\\|LINEON\\|LINEOFF\\|ISAUTHENTICATED\\|IDENT\\|HEADER\\|GETSECTION\\|FORGET\\|EXTLOADED\\|EXPORT\\|EVALSECURE\\|ERROR\\|ELAPSED\\|DUPN\\|DUP\\|DROPN\\|DROP\\|DEPTH\\|DEF\\|DEBUGON\\|DEBUGOFF\\|CSTORE\\|COUNTTOMARK\\|CLEARTOMARK\\|CLEARSYMBOLS\\|CLEARDEFS\\|CLEAR\\|BOOTSTRAP\\|AUTHENTICATE)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "sets": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(UNION\\|SET->\\|INTERSECTION\\|IMMUTABLE\\|DIFFERENCE\\|->SET\\|\\)\\|\\(\\)\\|\\()(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "conversion": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(UNGZIP\\|TOTIMESTAMP\\|TOSTRING\\|TORADIANS\\|TOLONG\\|TOHEX\\|TODOUBLE\\|TODEGREES\\|TOBOOLEAN\\|TOBIN\\|OPB64TOHEX\\|Z->\\|VEC->\\|V->\\|OPB64->\\|MAT->\\|MAP->\\|HEXTOBIN\\|HEXTOB64\\|HEX->\\|JSON->\\|FLOATBITS->\\|GZIP\\|ENCODER->\\|DOUBLEBITS->\\|BIN->\\|B64URL->\\|B64->\\|FROMHEX\\|FROMBITS\\|FROMBIN\\|BYTES->\\|BYTESTOBITS\\|BINTOHEX\\|B64TOHEX\\|->Z\\|->VEC\\|->V\\|->OPB64\\|->MAT\\|->MAP\\|->JSON\\|->HEX\\|->GTS\\|->ENCODER\\|->BYTES\\|->BIN\\|->B64URL\\|->B64)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "logic": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(\\|\\|\\|reducer\\.and\\|reducer\\.and\\.exclude-nulls\\|OR\\|NOT\\|NONNULL\\|mapper\\.or\\|mapper\\.and\\|ISNULL\\|DEFINEDMACRO\\|DEFINED\\|CONTINUE\\|bucketizer\\.or\\|bucketizer\\.and\\|BREAK\\|AND\\|&&\\|!)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "debug": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(TYPEOF\\|STOP\\|SECTION\\|LINEON\\|LINEOFF\\|GETSECTION\\|EXPORT\\|ASSERTMSG\\|ASSERT)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "time": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(TSELEMENTS\\|STU\\|NOW\\|MSTU\\|TSELEMENTS->\\|ISODURATION\\|ISO8601\\|HUMANDURATION\\|DURATION\\|->TSELEMENTS)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "trigonometry": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(TANH\\|TAN\\|SINH\\|SIN\\|HYPOT\\|COSH\\|COS\\|ATAN2\\|ATAN\\|ASIN\\|ACOS)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "extensions": {
      "patterns": [
        {
          "match": "(?<!\\S)(SYNC\\|CEVAL)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "flow": {
      "patterns": [
        {
          "match": "(?<!\\S)(SWITCH\\|RETURN\\|RETHROW\\|IFTE\\|IFT)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "reducer": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(STRICTREDUCER\\|reducer\\.var\\|reducer\\.var\\.forbid-nulls\\|reducer\\.sum\\|reducer\\.sum\\.nonnull\\|reducer\\.sum\\.forbid-nulls\\|reducer\\.shannonentropy\\.1\\|reducer\\.shannonentropy\\.0\\|reducer\\.sd\\|reducer\\.sd\\.forbid-nulls\\|reducer\\.or\\|reducer\\.or\\.exclude-nulls\\|reducer\\.min\\|reducer\\.min\\.nonnull\\|reducer\\.min\\.forbid-nulls\\|reducer\\.median\\|reducer\\.mean\\|reducer\\.mean\\.exclude-nulls\\|reducer\\.mean\\.circular\\|reducer\\.mean\\.circular\\.exclude-nulls\\|reducer\\.max\\|reducer\\.max\\.nonnull\\|reducer\\.max\\.forbid-nulls\\|reducer\\.join\\|reducer\\.join\\.urlencoded\\|reducer\\.join\\.nonnull\\|reducer\\.join\\.forbid-nulls\\|reducer\\.count\\|reducer\\.count\\.nonnull\\|reducer\\.count\\.include-nulls\\|reducer\\.count\\.exclude-nulls\\|reducer\\.argmin\\|reducer\\.argmax\\|reducer\\.and\\|reducer\\.and\\.exclude-nulls\\|PREDUCE\\|MACROREDUCER)(?!\\S)",
          "name": "entity.name.type"
        }
      ]
    },
    "mapper": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(STRICTMAPPER\\|max\\.time\\.sliding\\.window\\|max\\.tick\\.sliding\\.window\\|mapper\\.year\\|mapper\\.weekday\\|mapper\\.vspeed\\|mapper\\.vdist\\|mapper\\.var\\|mapper\\.var\\.forbid-nulls\\|mapper\\.truecourse\\|mapper\\.tostring\\|mapper\\.tolong\\|mapper\\.todouble\\|mapper\\.toboolean\\|mapper\\.tick\\|mapper\\.tanh\\|mapper\\.sum\\|mapper\\.sum\\.forbid-nulls\\|mapper\\.sqrt\\|mapper\\.sigmoid\\|mapper\\.second\\|mapper\\.sd\\|mapper\\.sd\\.forbid-nulls\\|mapper\\.round\\|mapper\\.replace\\|mapper\\.rate\\|mapper\\.product\\|mapper\\.pow\\|mapper\\.percentile\\|mapper\\.parsedouble\\|mapper\\.or\\|mapper\\.npdf\\|mapper\\.ne\\|mapper\\.mul\\|mapper\\.month\\|mapper\\.mod\\|mapper\\.minute\\|mapper\\.min\\|mapper\\.min\\.x\\|mapper\\.min\\.forbid-nulls\\|mapper\\.median\\|mapper\\.mean\\|mapper\\.mean\\.exclude-nulls\\|mapper\\.mean\\.circular\\|mapper\\.mean\\.circular\\.exclude-nulls\\|mapper\\.max\\|mapper\\.max\\.x\\|mapper\\.max\\.forbid-nulls\\|mapper\\.mad\\|mapper\\.lt\\|mapper\\.lowest\\|mapper\\.log\\|mapper\\.le\\|mapper\\.last\\|mapper\\.kernel\\.uniform\\|mapper\\.kernel\\.triweight\\|mapper\\.kernel\\.tricube\\|mapper\\.kernel\\.triangular\\|mapper\\.kernel\\.silverman\\|mapper\\.kernel\\.quartic\\|mapper\\.kernel\\.logistic\\|mapper\\.kernel\\.gaussian\\|mapper\\.kernel\\.epanechnikov\\|mapper\\.kernel\\.cosine\\|mapper\\.join\\|mapper\\.join\\.forbid-nulls\\|mapper\\.hspeed\\|mapper\\.hour\\|mapper\\.highest\\|mapper\\.hdist\\|mapper\\.gt\\|mapper\\.geo\\.within\\|mapper\\.geo\\.outside\\|mapper\\.geo\\.clear\\|mapper\\.geo\\.approximate\\|mapper\\.ge\\|mapper\\.floor\\|mapper\\.first\\|mapper\\.finite\\|mapper\\.exp\\|mapper\\.eq\\|mapper\\.dotproduct\\|mapper\\.dotproduct\\.tanh\\|mapper\\.dotproduct\\.sigmoid\\|mapper\\.dotproduct\\.positive\\|mapper\\.delta\\|mapper\\.day\\|mapper\\.count\\|mapper\\.count\\.nonnull\\|mapper\\.count\\.include-nulls\\|mapper\\.count\\.exclude-nulls\\|mapper\\.ceil\\|mapper\\.and\\|mapper\\.add\\|mapper\\.abs\\|MACROMAPPER)(?!\\S)",
          "name": "entity.name.type"
        }
      ]
    },
    "bucketize": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(STL\\|MAXBUCKETS\\|MACROBUCKETIZER\\|LASTBUCKET\\|INTERPOLATE\\|FILLVALUE\\|FILLPREVIOUS\\|FILLNEXT\\|CROP\\|BUCKETSPAN\\|bucketizer\\.sum\\|bucketizer\\.sum\\.forbid-nulls\\|bucketizer\\.or\\|bucketizer\\.min\\|bucketizer\\.min\\.forbid-nulls\\|bucketizer\\.median\\|bucketizer\\.mean\\|bucketizer\\.mean\\.exclude-nulls\\|bucketizer\\.mean\\.circular\\|bucketizer\\.mean\\.circular\\.exclude-nulls\\|bucketizer\\.max\\|bucketizer\\.max\\.forbid-nulls\\|bucketizer\\.last\\|bucketizer\\.join\\|bucketizer\\.join\\.forbid-nulls\\|bucketizer\\.first\\|bucketizer\\.count\\|bucketizer\\.count\\.nonnull\\|bucketizer\\.count\\.include-nulls\\|bucketizer\\.count\\.exclude-nulls\\|bucketizer\\.and\\|BUCKETCOUNT\\|ATBUCKET)(?!\\S)",
          "name": "entity.name.type"
        }
      ]
    },
    "statistics": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(SKEWNESS\\|SINGLEEXPONENTIALSMOOTHING\\|RANDPDF\\|PROBABILITY\\|PROB\\|LR\\|KURTOSIS\\|DOUBLEEXPONENTIALSMOOTHING)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "help": {
      "patterns": [
        {
          "match": "(?<!\\S)(RTFM\\|INFOMODE\\|INFO\\|DOCMODE\\|DOC)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "quaternions": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(ROTATIONQ\\|QROTATION\\|QROTATE\\|QMULTIPLY\\|QDIVIDE\\|QCONJUGATE\\|Q->\\|->Q)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "framework": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(REDUCE\\|PREDUCE\\|PFILTER\\|PAPPLY\\|max\\.time\\.sliding\\.window\\|max\\.tick\\.sliding\\.window\\|MAP\\|FILTER\\|BUCKETIZE\\|APPLY)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "counters": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(RANGE\\|COUNTERVALUE\\|COUNTERDELTA\\|COUNTER)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(pi\\|e\\|NULL\\|NaN\\|MINLONG\\|MAXLONG\\|PI\\|E)(?!\\S)",
          "name": "constant.language.warpscript"
        }
      ]
    },
    "processing": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(Pvertex\\|PupdatePixels\\|Ptriangle\\|Ptranslate\\|Ptint\\|PtextWidth\\|PtextSize\\|PtextMode\\|PtextLeading\\|PtextFont\\|PtextDescent\\|PtextAscent\\|PtextAlign\\|Ptext\\|PstrokeWeight\\|PstrokeJoin\\|PstrokeCap\\|Pstroke\\|PsphereDetail\\|Psphere\\|PshearY\\|PshearX\\|Pset\\|Pscale\\|Psaturation\\|ProtateZ\\|ProtateY\\|ProtateX\\|Protate\\|PresetMatrix\\|Pred\\|PrectMode\\|Prect\\|PquadraticVertex\\|Pquad\\|PpushStyle\\|PpushMatrix\\|PpopStyle\\|PpopMatrix\\|Ppoint\\|Ppixels\\|PnoTint\\|PnoStroke\\|Pnorm\\|PnoFill\\|PnoClip\\|Pmap\\|Pmag\\|Pline\\|PlerpColor\\|Plerp\\|PimageMode\\|Pimage\\|Phue\\|Pgreen\\|PGraphics\\|Pget\\|Pfill\\|PendShape\\|PendContour\\|Pencode\\|PellipseMode\\|Pellipse\\|Pdist\\|Pdecode\\|PcurveVertex\\|PcurveTightness\\|PcurveTangent\\|PcurvePoint\\|PcurveDetail\\|Pcurve\\|PcreateFont\\|Pcopy\\|Pconstrain\\|PcolorMode\\|Pcolor\\|Pclip\\|Pclear\\|Pbrightness\\|Pbox\\|Pblue\\|PblendMode\\|Pblend\\|PbezierVertex\\|PbezierTangent\\|PbezierPoint\\|PbezierDetail\\|Pbezier\\|PbeginShape\\|PbeginContour\\|Pbackground\\|Parc\\|Palpha\\|Pfilter)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "ProcessingNOTREVIEWED": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(PupdatePixels\\|Ptriangle\\|Ptranslate\\|PtextWidth\\|PtextSize\\|PtextMode\\|PtextLeading\\|PtextFont\\|PtextDescent\\|PtextAscent\\|PtextAlign\\|Ptext\\|PsphereDetail\\|Psphere\\|PshearY\\|PshearX\\|Pset\\|Pscale\\|Psaturation\\|ProtateZ\\|ProtateY\\|ProtateX\\|Protate\\|PresetMatrix\\|Pred\\|PrectMode\\|Prect\\|PquadraticVertex\\|Pquad\\|PpushStyle\\|PpushMatrix\\|PpopStyle\\|PpopMatrix\\|Ppoint\\|Ppixels\\|Pnorm\\|PnoClip\\|Pmap\\|Pmag\\|Pline\\|PlerpColor\\|Plerp\\|Phue\\|Pgreen\\|Pget\\|PendContour\\|PellipseMode\\|Pellipse\\|Pdist\\|PcurveTightness\\|PcurveTangent\\|PcurvePoint\\|PcurveDetail\\|Pcurve\\|PcreateFont\\|Pcopy\\|Pconstrain\\|Pclip\\|Pclear\\|Pbrightness\\|Pbox\\|Pblue\\|PblendMode\\|Pblend\\|PbezierTangent\\|PbezierPoint\\|PbezierDetail\\|Pbezier\\|PbeginContour\\|Parc\\|Palpha\\|Pfilter)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "pig": {
      "patterns": [
        {
          "match": "(?<!\\S)(PIGSCHEMA\\|->V)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "filter": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(PFILTER\\|MACROFILTER\\|filter\\.latencies\\|filter\\.last\\.ne\\|filter\\.last\\.lt\\|filter\\.last\\.le\\|filter\\.last\\.gt\\|filter\\.last\\.ge\\|filter\\.last\\.eq\\|filter\\.bymetadata\\|filter\\.bylabelsattr\\|filter\\.bylabels\\|filter\\.byclass\\|filter\\.byattr)(?!\\S)",
          "name": "entity.name.type"
        }
      ]
    },
    "apply": {
      "patterns": [
        {
          "match": "(?<!\\S)(PAPPLY\\|APPLY)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "geo": {
      "patterns": [
        {
          "match":
            "(?<!\\S)(mapper\\.truecourse\\|mapper\\.hdist\\|mapper\\.geo\\.within\\|mapper\\.geo\\.outside\\|mapper\\.geo\\.clear\\|mapper\\.geo\\.approximate\\|LOCSTRINGS\\|LOCATIONS\\|HAVERSINE\\|HHCODE->\\|GEOHASH->\\|GEOUNPACK\\|GEOPACK\\|GEO\\.WKT\\|GEO\\.WKT\\.UNIFORM\\|GEO\\.WITHIN\\|GEO\\.UNION\\|GEO\\.REGEXP\\|GEO\\.OPTIMIZE\\|GEO\\.JSON\\|GEO\\.JSON\\.UNIFORM\\|GEO\\.INTERSECTS\\|GEO\\.INTERSECTION\\|GEO\\.DIFFERENCE\\|ELEVATIONS\\|BBOX\\|->HHCODELONG\\|->HHCODE\\|->GEOHASH)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    },
    "bitset": {
      "patterns": [
        {
          "match": "(?<!\\S)(BITSTOBYTES\\|BITGET\\|BITCOUNT)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
      ]
    }
  },
  "scopeName": "source.warpscript"
}
