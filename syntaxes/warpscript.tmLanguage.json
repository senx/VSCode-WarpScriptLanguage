{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "WarpScript",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#macros"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#strings2"
    },
    {
      "include": "#strings3"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#structures"
    },
    {
      "include": "#constants"
    }
  ],
  "repository": {
    "comments": {
			"patterns": [
				{
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.java"
						}
					},
					"match": "/\\*\\*/",
					"name": "comment.block.empty.java"
				},
				{
					"include": "text.html.javadoc"
				},
				{
					"include": "#comments-inline"
        }
			]
		},
		"comments-inline": {
			"patterns": [
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.java"
						}
					},
					"end": "(\\s)*\\*/",
					"name": "comment.block.java"
				},
				{
					"begin": "(^[\\s\\t]+)?(?=//)",
					"beginCaptures": {
						"1": {
							"name": "punctuation.whitespace.comment.leading.java"
						}
					},
					"end": "(?!\\G)",
					"patterns": [
						{
							"begin": "(\\s)*//",
							"beginCaptures": {
								"0": {
									"name": "punctuation.definition.comment.java"
								}
							},
							"end": "\\n",
							"name": "comment.line.double-slash.java"
						}
					]
				}
			]
		},
    "functions": {
      "patterns": [
        {
          "match": "(?<!\\S)(DOUBLEEXPONENTIALSMOOTHING|EVERY|EXPM1|FINDSETS|FUSE|GROOVY|HYPOT|IMMUTABLE|JS|LOG1P|LUA|ONLYBUCKETS|PAPPLY|PFILTER|PYTHON|QCONJUGATE)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(QDIVIDE|QMULTIPLY|QROTATE|QROTATION|R|ROTATIONQ|R->|RUBY|STACKATTRIBUTE|->Q|ULP|max\\.tick\\.sliding\\.window|max\\.time\\.sliding\\.window|op\\.and\\.ignore-nulls)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(op\\.and\\.ignore-nulls|op\\.or\\.ignore-nulls|reducer\\.percentile|reducer\\.sd\\.forbid-nulls|reducer\\.var\\.forbid-nulls|Macros|SENSISION\\.EVENT|SENSISION\\.GET|SENSISION\\.SET)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(SENSISION\\.UPDATE|CEVAL|SYNC|JSON->|PICKLE->|TOBIN|TOBOOLEAN|TODOUBLE|TOLONG|TOSTRING|TOTIMESTAMP|CALL|CUDF|UDF|->BIN|->HEX|B64->|B64TOHEX|B64URL->|BIN->|BINTOHEX|BYTES->|FROMBIN|FROMHEX|HASH|HEX->|HEXTOB64|HEXTOBIN)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(JOIN|MATCH|MATCHER|OBP64->|OPB64TOHEX|REPLACE|REPLACEALL|SPLIT|SUBSTRING|TEMPLATE|->B64|->B64URL|->BYTES|TOHEX|TOLOWER|->OPB64|TOUPPER|TRIM|URLDECODE|URLENCODE|UUID|ADDDAYS|ADDMONTHS|ADDYEARS|AGO|DURATION|HUMANDURATION|ISO8601|ISODURATION|MSTU)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(NOTAFTER|NOTBEFORE|NOW|STU|->TSELEMENTS|TSELEMENTS|TSELEMENTS->|AESUNWRAP|AESWRAP|MD5|RSADECRYPT|RSAENCRYPT|RSAGEN|RSAPRIVATE|RSAPUBLIC|RSASIGN|RSAVERIFY|SHA1|SHA1HMAC|SHA256|SHA256HMAC|GZIP|->Z|UNGZIP|Z->|AUTHENTICATE|BOOTSTRAP|CLEAR|CLEARDEFS|CLEARSYMBOLS|CLEARTOMARK)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(COUNTTOMARK|CSTORE|DEBUGOFF|DEBUGON|DEF|DEPTH|DOC|DOCMODE|DROP|DROPN|DUP|DUPN|ELAPSED|EXPORT|LOAD|MARK|NDEBUGON|NOTIMINGS|PICK|RESET|REXEC|ROLL|ROLLD|ROT|RUN|SNAPSHOT|SNAPSHOTALL|SNAPSHOTALLTOMARK|SNAPSHOTTOMARK|STACKATTRIBUTE|STACKTOLIST|STORE|SWAP|TIMINGS|TYPEOF)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(EVALSECURE|HEADER|IDENT|JSONLOOSE|JSONSTRICT|LIMIT|MAXBUCKETS|MAXDEPTH|MAXGTS|MAXLOOP|MAXOPS|MAXSYMBOLS|NOOP|OPS|RESTORE|REV|RTFM|SAVE|SECUREKEY|TOKENINFO|UNSECURE|URLFETCH|WEBCALL|ABS|AND|CBRT|CEIL|COPYSIGN|DOUBLEBITS->|EXP|FLOATBITS->|FLOOR|>|IEEEREMAINDER)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(ISNULL|ISNaN|LBOUNDS|<<|LOG|LOG10|<|MAX|MIN|%|NBOUNDS|NEXTAFTER|NEXTUP|!|NOT|NPDF|OR|PROBABILITY|RAND|RANDPDF|REVBITS|>>|RINT|ROUND|SIGNUM|SQRT|-|->DOUBLEBITS|->FLOATBITS|>>>|->PICKLE|ACOS|ASIN|ATAN|COS|COSH|SIN|SINH|TAN|TANH|TODEGREES|TORADIANS|d|h|m|ms|ns|ps|s|us|w)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(COUNTER|COUNTERDELTA|COUNTERVALUE|RANGE|QCONJUGATE|QDIVIDE|QMULTIPLY|QROTATE|QROTATION|Q->|ROTATIONQ|->Q|BITCOUNT|BITGET|BITSTOBYTES|BYTESTOBITS|ASSERT|BREAK|CONTINUE|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETURN|STOP|SWITCH|UNTIL|WHILE|CLONEREVERSE)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(CONTAINS|CONTAINSKEY|CONTAINSVALUE|FLATTEN|GET|KEYLIST|LFLATMAP|LIST->|LMAP|MAPID|MAT->|MSORT|PACK|SIZE|SUBLIST|SUBMAP|->LIST|->MAP|->MAT|->V|->VEC|UNIQUE|UNLIST|UNMAP|UNPACK|VALUELIST|VEC->|V->|ZIP|DIFFERENCE|INTERSECTION|SET|SET->|->SET|UNION|APPEND|LSORT|PUT|REMOVE|REVERSE|GEOHASH->|GEOPACK)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(GEOREGEXP|GEOUNPACK|GEO\\.DIFFERENCE|GEO\\.INTERSECTION|GEO\\.INTERSECTS|GEO\\.JSON|GEO\\.UNION|GEO\\.WITHIN|GEO\\.WKT|HAVERSINE|HHCODE->|->GEOHASH|->HHCODE|CHUNK|CLIP|SHRINK|TIMECLIP|TIMEMODULO|TIMESCALE|TIMESHIFT|TIMESPLIT|CORRELATE|CPROB|ISONORMALIZE|LOWESS|LTTB|MODE|MONOTONIC|MUSIGMA|NORMALIZE|NSUMSUMSQ|PROB)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(RLOWESS|SINGLEEXPONENTIALSMOOTHING|STANDARDIZE|TLTTB|VALUEHISTOGRAM|DWTSPLIT|FDWT|FFT|FFTAP|IDWT|IFFT|CLONE|CLONEEMPTY|COMMONTICKS|COMPACT|DEDUP|FILLTICKS|INTEGRATE|LASTSORT|MERGE|NONEMPTY|PARTITION|QUANTIZE|RANGECOMPACT|RESETS|RSORT|RVALUESORT|SORT|SORTBY|UNWRAP|VALUEDEDUP|VALUESORT|VALUESPLIT|WRAP|WRAPRAW|MAKEGTS)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(NEWGTS|PARSE|DELETE|FETCH|FETCHBOOLEAN|FETCHDOUBLE|FETCHLONG|FETCHSTRING|FIND|FINDSTATS|UPDATE|DISCORDS|DTW|OPTDTW|PATTERNDETECTION|PATTERNS|ZDISCORDS|ZPATTERNDETECTION|ZPATTERNS|ZSCORE|ESDTEST|GRUBBSTEST|HYBRIDTEST|HYBRIDTEST2|STLESDTEST|THRESHOLDTEST|ZSCORETEST|BBOX|COPYGEO|ELEVATIONS|LOCATIONOFFSET|LOCATIONS|LOCSTRINGS)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(ATTRIBUTES|LABELS|META|METASORT|NAME|PARSESELECTOR|RELABEL|RENAME|SETATTRIBUTES|TOSELECTOR|ADDVALUE|ATINDEX|ATTICK|FIRSTTICK|LASTTICK|SETVALUE|TICKINDEX|TICKLIST|TICKS|VALUES|ATBUCKET|BUCKETCOUNT|BUCKETSPAN|CROP|FILLNEXT|FILLPREVIOUS|FILLVALUE|INTERPOLATE|LASTBUCKET|STL|UNBUCKETIZE|REDUCE|MACROREDUCER|reducer\\.and)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(reducer\\.and\\.exclude-nulls|reducer\\.argmax|reducer\\.argmin|reducer\\.count|reducer\\.join|reducer\\.join\\.forbid-nulls|reducer\\.max|reducer\\.max\\.forbid-nulls|reducer\\.mean|reducer\\.mean\\.exclude-nulls|reducer\\.median|reducer\\.min|reducer\\.min\\.forbid-nulls|reducer\\.or|reducer\\.or\\.exclude-nulls|reducer\\.sd)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(reducer\\.shannonentropy\\.0|reducer\\.shannonentropy\\.1|reducer\\.sum|reducer\\.sum\\.forbid-nulls|reducer\\.var|MAP|MACROMAPPER|STRICTMAPPER|mapper\\.join|mapper\\.npdf|mapper\\.percentile|mapper\\.truecourse|mapper\\.and|mapper\\.count|mapper\\.delta|mapper\\.dotproduct|mapper\\.dotproduct\\.positive|mapper\\.dotproduct\\.sigmoid)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(mapper\\.dotproduct\\.tanh|mapper\\.eq|mapper\\.first|mapper\\.ge|mapper\\.gt|mapper\\.hdist|mapper\\.highest|mapper\\.hspeed|mapper\\.last|mapper\\.le|mapper\\.lowest|mapper\\.lt|mapper\\.max\\.x|mapper\\.mean|mapper\\.mean\\.circular|mapper\\.median|mapper\\.min|mapper\\.min\\.x|mapper\\.ne|mapper\\.or|mapper\\.product|mapper\\.rate|mapper\\.replace)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(mapper\\.sd|mapper\\.sum|mapper\\.var|mapper\\.vdist|mapper\\.vspeed|mapper\\.abs|mapper\\.add|mapper\\.ceil|mapper\\.day|mapper\\.exp|mapper\\.floor|mapper\\.hour|mapper\\.log|mapper\\.minute|mapper\\.month|mapper\\.mul|mapper\\.todouble|mapper\\.pow|mapper\\.round|mapper\\.second|mapper\\.sigmoid|mapper\\.tanh|mapper\\.tick|mapper\\.toboolean)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(mapper\\.todouble|mapper\\.tolong|mapper\\.tostring|mapper\\.weekday|mapper\\.year|mapper\\.kernel\\.cosine|mapper\\.kernel\\.epanechnikov|mapper\\.kernel\\.gaussian|mapper\\.kernel\\.logistic|mapper\\.kernel\\.quartic|mapper\\.kernel\\.silverman|mapper\\.kernel\\.triangular|mapper\\.kernel\\.tricube|mapper\\.kernel\\.triweight|mapper\\.kernel\\.uniform)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(mapper\\.kernel\\.cosine|mapper\\.kernel\\.epanechnikov|mapper\\.kernel\\.gaussian|mapper\\.kernel\\.logistic|mapper\\.kernel\\.quartic|mapper\\.kernel\\.silverman|mapper\\.kernel\\.triangular)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(mapper\\.kernel\\.tricube|mapper\\.kernel\\.triweight|mapper\\.kernel\\.uniform|mapper\\.geo\\.approximate|mapper\\.geo\\.clear|mapper\\.geo\\.outside|mapper\\.geo\\.within|MACROFILTER|filter\\.byclass|filter\\.bylabels|filter\\.last\\.eq)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(filter\\.last\\.ge|filter\\.last\\.gt|filter\\.last\\.le|filter\\.last\\.lt|filter\\.last\\.ne|MACROFILTER|FILTER|bucketizer\\.percentile|MACROBUCKETIZER|bucketizer\\.and|bucketizer\\.count|bucketizer\\.first|bucketizer\\.join)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(bucketizer\\.last|bucketizer\\.max|bucketizer\\.mean|bucketizer\\.median|bucketizer\\.min|bucketizer\\.or|bucketizer\\.sum|BUCKETIZE|APPLY|op\\.add|op\\.and|op\\.div|op\\.eq|op\\.ge|op\\.gt|op\\.le|op\\.lt|op\\.mask|op\\.mul|op\\.ne|op\\.negmask|op\\.or|op\\.sub|MAXLONG|MINLONG|NULL|NaN|PI|e|pi)(?!\\S)",
          "name": "entity.name.function.warpscript"
        },
        {
          "match": "(?<!\\S)(PpopStyle|PpushStyle|Parc|Pellipse|Pline|Ppoint|Pquad|Prect|Ptriangle|Curves|Pbezier|PbezierDetail|PbezierPoint|PbezierTangent|Pcurve|PcurveDetail|PcurvePoint|PcurveTangent|PcurveTightness|Pbox|Psphere|PsphereDetail|Attributes|PellipseMode|PrectMode|PstrokeCap|PstrokeJoin|PstrokeWeight|Vertex|PbeginContour|PbeginShape|PbezierVertex|PcurveVertex|PendContour|PendVertex|PquadraticVertex|Pvertex|PshapeMode|Transform|PpopMatrix|PpushMatrix|PresetMatrix|Protate|ProtateX|ProtateY|ProtateZ|Pscale|PshearX|PshearY|Ptranslate|Pbackground|Pclear|PcolorMode|Pfill|PnoFill|PnoStroke|Pstroke|Palpha|Pblue|Pbrightness|Pcolor|Pgreen|Phue|PlerpColor|Pred|Psaturation|Pimage|PimageMode|PnoTint|Ptint|Pblend|Pcopy|Pfilter|Pget|Ppixels|Pset|PupdatePixels|PblendMode|Pclip|PnoClip|PcreateFont|Ptext|PtextFont|PtextAlign|PtextLeading|PtextMode|Pencode|PtextSize|PtextWidth|PtextAscent|PtextDescent|Pconstain|Pdist|Plerp|Pmag|Pmap|Pnorm)(?!\\S)",
          "name": "entity.name.function.warpscript"
        }
       
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "(?<!\\S)(STOP|FOREACH|IFTE|CONTINUE|FORSTEP|FOR|EVAL|ASSERT|NRETURN|ISNULL|SWITCH|RETURN|IFT|DEFINED|MSGFAIL|BREAK|FAIL|ISNaN|UNTIL|WHILE)(?!\\S)",
          "name": "keyword.control.warpscript"
        },
        {
          "match": "(?<!\\S)(!=|<|>|~=|<=|==|>=)(?!\\S)",
          "name": "keyword.operator.comparison.warpscript"
        },
        {
          "match": "(?<!\\S)(%|\\*|\\+|-|/|\\*\\*)(?!\\S)",
          "name": "keyword.operator.arithmetic.warpscript"
        },
        {
          "match": "(?<!\\S)(!|&&|AND|OR|NOT|\\|\\|)(?!\\S)",
          "name": "keyword.operator.logical.warpscript"
        },
        {
          "match": "(?<!\\S)(&|\\^|\\||>>>|~|<<|>>)(?!\\S)",
          "name": "keyword.operator.bitwise.warpscript"
        }
      ]
    },
    "structures": {
      "patterns": [
        {
          "match": "(?<!\\S)(\\[|\\]|\\[\\]|\\{|\\}|\\{\\}|<%|%>|<S|S>|null|null)(?!\\S)",
          "name": "keyword.control.warpscript"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "(?<!\\S)(true|false|E|e|NaN|MAXLONG|NULL|max.time.sliding.window|MINLONG|pi|PI|max.tick.sliding.window)(?!\\S)",
          "name": "constant.language.warpscript"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "\\$([A-Za-z0-9._]+)",
          "name": "constant.other.reference.link.warpscript"
        }
      ]
    },
    "macros": {
      "patterns": [
        {
          "match": "\\@([A-Za-z0-9._]+)",
          "name": "constant.other.reference.link.warpscript"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "(?<!\\S)(-)?[0-9.]+\\b",
          "name": "constant.numeric.warpscript"
        },
        {
          "match": "(?<!\\S)0x[0-9ABCDEFabcdef]+\\b",
          "name": "constant.numeric.warpscript"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.warpscript",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.warpscript",
          "match": "\\\\."
        }
      ]
    },
    "strings2": {
      "name": "string.quoted.double.warpscript",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.warpscript",
          "match": "\\\\."
        }
      ]
    },
    "strings3": {
      "name": "string.quoted.double.warpscript",
      "begin": "<'",
      "end": "'>",
      "patterns": [
        {
          "name": "constant.character.escape.warpscript",
          "match": "\\\\."
        }
      ]
    }
  },
  "scopeName": "source.warpscript"
}